###############################################################################
# TMV: camera and upload configuration. 
###############################################################################

###############################################################################
# Camera
###############################################################################
[camera]
#
# Where to save images
#
tmv_root = "."
#tmv_root = "/tmp/tmv"

#
# Hardlink a copy of the latest image - useful for tmv-web to display last image
#
latest_image = "latest-image.jpg"

#
# Time in seconds between images
#
#interval = 60.0

#
# Should be store under tmv_root/(eg)2020-12-31/
#
#file_by_date = true

#
# The minimum time, in seconds, we'll power down/sleep/etc if camera inactive
#
#inactive_threshold = 1800.0 # 30 minutes

#
#   What to do when not taking photos?
#   WAIT: just time.sleep()
#   EXCEPTION: raise PowerOff
#   POWER_OFF: ask pijuice to turn off (will wakeup at the right time)
#   EXIT: call system exit
#
#camera_inactive_action = "WAIT"

#
# When to turn on and off photo taking?
# on:
#   10:00:00 : turn on at this time
#   'dawn'|'sunrise'|'sunset'|'dusk' : calculate based on position on on Earthy
#   'dim'|'light'|'dark' : use the camera as a light sensor to determine this
# off:
#   as for 'on'. Type has to match (e.g. 10:00:00 and 12:12:00 works ok)
#
on = true
off = false

#
# City : 'auto' or a well-known city name for a local lookup
#
city = 'Brisbane'

#
# [ "spinny", "image_name", "settings",]
#
# overlays = []
overlays = [ "spinny", "image_name","simple_settings"]

#
# Use the light sensor to estimate shutter speed
# It is useful for long (>0.5s) speeds, otherwise use auto
# Only applied to LIGHT|DIM|DARK settings when 'exposure_mode="off"''
#
#calc_shutter_speed = false
calc_shutter_speed = true

#
# Camera logging: DEBUG, INFO, WARNING, ERROR, CRITAL
#
#log_level = 'WARNING'
log_level = 'INFO'

#
# Show the LED when camera is taking a photo
#
#led = false

#
#   LIGHT|DIM|DARK: settings passed to picam to override the defaults. See PiCamera API docs.
#
#    The defaults are which are:
#       awb_mode= 'auto', #    'off','auto','sunlight','cloudy','shade','tungsten','fluorescent','incandescent','flash','horizon'
#       exposure_mode= 'auto', # 'off','auto','night','nightpreview','backlight','spotlight','sports','snow','beach','verylong','fixedfps','antishake','fireworks'
#       framerate= 30 # 1/30 max exposure time, 1/5 (5s exposure time) is the minimum.
#       hflip= false,
#       iso= 0,
#       meter_mode= 'average',
#       resolution: '640x480',
#       rotation= 0,
#       sharpness= 0,
#       shutter_speed= 0,
#       sensor_mode= 0,
#       saturation= 0,
#       still_stats= False,
#       zoom= [0.0, 0.0, 1.0, 1.0],
#       vflip = False
#
# These are set below to helpful options, not the default. 
# Seperate entries for LIGHT, DIM and DARK are required: they are independent
# Use "rotation = 180" to flip instead of vflip
# Notes:
# - Max exposure time is 1 / framerate, so you must reduce framerate from 30fps to get long exposure times
# - Framerate < 0.20 appears to freeze the whole camera, so is not allowed
# - In timelapse sequence, keep iso/mode/etc the same or you'll get blips on light-level change
# - See https://picamera.readthedocs.io/en/release-1.12/fov.html for resolutions
# -- v1: 
# ---- 4:3  --> 2592x1944 or 1296x972 or 640x480
# ---- 16:9 --> 1920x108  or 1296x730 
# -- v2:
# ---- 4:3  --> 3280x2464 or 1640x1232 or 640x480
# ---- 16:9 --> 1920x1080 (partial FOV) or 1640x922 (full FOV) or 1280x720 (partial) FOV
#
[camera.picam.LIGHT]
iso = 200
exposure_mode = "auto"
resolution = '1280x720'

[camera.picam.DIM]
iso = 200
exposure_mode = "auto"
framerate = 1.0 # max ss=1
resolution = '1280x720'

[camera.picam.DARK]
iso = 1600
exposure_mode = "night"
framerate = 0.25 # max ss=4
resolution = '1280x720'

#
#   The camera is used to sense light and determine the next photo's settings
#   and determine if we turn off (see on/off)
#
#   light   : pixel average above which it is light
#   dark    : pixel average below which it is dark
#   freq    : interval, in seconds, between light sensings
#   max_age : the maximum age, in seconds, of light level readings.
#             older readings are discarded
#             to change the level, all recent images must have the same level
#  power_off :
#             if we poweroff via sensor reading (e.g. off = 'Dim'), how long,
#             in seconds, to stay off for?
#             important! make sure this is longer than inactive_threshold or we
#             won't turn off
#
[camera.sensor]
#power_off = 3600.0
#dark = 0.05
#freq = 300 # 5 minutes
#max_age = 1800 # 30 minutes
#light = 0.2
#save_images = false

# Button for camera on/off/auto
# Software default. For hardware use
# pins = [4, 17]    
# instead of "file..."
#   
[camera.mode_button]
   file = 'camera-mode'
#   button = 17
#   led = 4

[camera.speed_button]
   file = 'camera-speed'
##   button = 27
#   led = 10  

#[camera.statusled]
# led = 9

###############################################################################
# Where to upload the images, using tmv-upload
###############################################################################
[upload]
#
# S3 destination URL. 
# It must be set: usually just change BUCKET-NAME-TO-SET
#
# The following substiutions are made:
# UUID :  automatic identifier, probably unique
# HOSTNAME : hostname of machine
# (Source location is "tmv_root" in [camera])
#
destination = "s3://BUCKET-NAME-TO-SET/HOSTNAME/daily-photos"

# file_filter="*"
# extraargs  = {
#   ACL = 'public-read',
# }
# profile = 'aws-profile-name-with-my-credentials'
# endpoint = 'http://my.s3server.com:9000'

# Upload check every n seconds.
# (Also uploads if a change is detected)
# interval = 60

#
# Choose from DEBUG, INFO, WARNING, ERROR, CRITAL
#
#log_level = 'WARNING'
